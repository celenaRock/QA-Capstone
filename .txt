// const {By, until, WebDriver} = require("selenium-webdriver");
// const chromedriver = require("chromedriver")

// module.export = class BasePage {
//     driver;
//     url;

//     constructor(myDriver, myUrl) {
//         this.driver = myDriver
//         this.url = myUrl
//     }

//     // Methods for any page that we might use or use enough to use in majority of tests //

//     async navigate() {
//         return await this.driver.get(this.url)
//     }

// /* waits for the indentified element to be located and visible before returning it,
// @param {By} elementBy - the locator for the element to return /

// async getElement(elementBy) {
//     await this.driver.wait(until.elementLocated(elementBy));
//     let element = await this.driver.findElement(elementBy);
//     await this.driver.wait(until.elementIsVisible(elementBy));
//     return element;
// }

// / clicks the given element after waiting for it and then sends the provided keys
// @param {By} elementBy - the locator for the element to clear
// @param {any} key - string or list of keys to send to the cleared input /

// async setInput(element, keys) {
//     let input = await this.getElement(elementBy);
//     await input.clear();
//     return input.sendKeys(keys);
// }

// / returns an element's text after waiting for it to be visible
// @param {By} elementBy - the locator of the element to get text from */

// async getText(elementBy) {
//     return(await this.getElement(elementBy)).getText();
// }

// }
// const {By} = require("selenium-webdriver")
// const {Basepage} = require("./basePage")

// module.export = class Google extends Basepage {
//     // selectors //
//     searchBar = By.css('input[name = "q"]')
//     results = By.id('res')

//     constructor(driver, url) {
//         super(driver, url)
//         // when we use super we are calling the original element & methods from the base page //
//  }

//  // methods //

//  async doSearch(term) {
//      await this.setInput(this.searchBar, '${term}\n')
//  }

//  async getResults() {
//      return await this.getText(this.results)
//  }

// }
// const { execPath } = require("process")
// const {Builder, Capabilities} = require("selenium-webdriver")
// const {ebay} = require("./ebayPage")
// const driver = new Builder().withCapabilities(Capabilities.chrome()).build()
// const myPage = new ebay(driver, 'https://www.ebay.com/%27')

// test('Searching ebay', async () => {
//     await myPage.navigate()
//     await myPage.doSearch('puppies')

//     execPath(results).toContain('puppies')

//     await myPage.driver.quit()
// })
